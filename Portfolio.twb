<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20214.22.0108.1039                               -->
<workbook original-version='18.1' source-build='2021.4.3 (20214.22.0108.1039)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (Tableau  Table 1)' inline='true' name='federated.0vsv0mw0a7sq5v1fi62ws1r7c3u5' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau  Table 1' name='excel-direct.01y9rbo1je0cq01h5k9qx1lr0t09'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/rasheed/Desktop/Portfolio/Tableau  Table 1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.01y9rbo1je0cq01h5k9qx1lr0t09' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.01y9rbo1je0cq01h5k9qx1lr0t09' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0F934825622D460AB2D15C30308E0513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0F934825622D460AB2D15C30308E0513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0F934825622D460AB2D15C30308E0513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_0F934825622D460AB2D15C30308E0513]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_0F934825622D460AB2D15C30308E0513'>
            <properties context=''>
              <relation connection='excel-direct.01y9rbo1je0cq01h5k9qx1lr0t09' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='DeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau  Table 2)' inline='true' name='federated.11m9cey0kia0w918tek2g125pr33' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau  Table 2' name='excel-direct.1a3b55p1k3olk4140imvf0jwkqnl'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/rasheed/Desktop/Portfolio/Tableau  Table 2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1a3b55p1k3olk4140imvf0jwkqnl' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1a3b55p1k3olk4140imvf0jwkqnl' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_BAF85582A9C44EF2A2CD1037F5605EB3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_BAF85582A9C44EF2A2CD1037F5605EB3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_BAF85582A9C44EF2A2CD1037F5605EB3]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_BAF85582A9C44EF2A2CD1037F5605EB3'>
            <properties context=''>
              <relation connection='excel-direct.1a3b55p1k3olk4140imvf0jwkqnl' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau  Table 3)' inline='true' name='federated.12njc4q1km994d19dspa209knxd8' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau  Table 3' name='excel-direct.1b5q5vm1cawoh417qkyau06eflv8'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/rasheed/Desktop/Portfolio/Tableau  Table 3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1b5q5vm1cawoh417qkyau06eflv8' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D249:no:A1:D249:0' header='yes' outcome='2'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1b5q5vm1cawoh417qkyau06eflv8' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D249:no:A1:D249:0' header='yes' outcome='2'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D249:no:A1:D249:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_7B29320407394358B72EE45DD0180BB7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_7B29320407394358B72EE45DD0180BB7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_7B29320407394358B72EE45DD0180BB7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_7B29320407394358B72EE45DD0180BB7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_7B29320407394358B72EE45DD0180BB7]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_7B29320407394358B72EE45DD0180BB7'>
            <properties context=''>
              <relation connection='excel-direct.1b5q5vm1cawoh417qkyau06eflv8' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D249:no:A1:D249:0' header='yes' outcome='2'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau  Table 4)' inline='true' name='federated.0gbj4f90ovk7pi16wo2191q53f3s' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau  Table 4' name='excel-direct.1iwsjbn06wy4b013ha7bg04qldg6'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/rasheed/Desktop/Portfolio/Tableau  Table 4.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1iwsjbn06wy4b013ha7bg04qldg6' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1iwsjbn06wy4b013ha7bg04qldg6' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_809DEDBFB3C442C5A78E194889637DD9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_809DEDBFB3C442C5A78E194889637DD9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_809DEDBFB3C442C5A78E194889637DD9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_809DEDBFB3C442C5A78E194889637DD9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_809DEDBFB3C442C5A78E194889637DD9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_809DEDBFB3C442C5A78E194889637DD9]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wales&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Northern Ireland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Location:nk]&#10;[none:Forecast Indicator:nk]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;China&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;European Union&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Germany&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;International&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Panama&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Romania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Albania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Europe&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Togo&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Austria&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;England&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Greece&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;High income&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Italy&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Mali&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Peru&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Spain&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Syria&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Congo&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Guam&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Oman&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Poland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;United States&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Australia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Benin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Chile&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Libya&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Northern Ireland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Asia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Belize&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Chad&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;France&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Iran&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Russia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Wales&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Canada&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Laos&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Niue&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Africa&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;India&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Japan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Macao&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;North America&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Palau&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Timor&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Angola&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Israel&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Low income&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Niger&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Finland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Malta&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Norway&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;South America&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;World&quot;</bucket>
            </map-pri>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_809DEDBFB3C442C5A78E194889637DD9'>
            <properties context=''>
              <relation connection='excel-direct.1iwsjbn06wy4b013ha7bg04qldg6' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Deaths by Continents'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#555555' fontname='Tableau Semibold'>Deaths by Continents</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau  Table 2)' name='federated.11m9cey0kia0w918tek2g125pr33' />
          </datasources>
          <datasource-dependencies datasource='federated.11m9cey0kia0w918tek2g125pr33'>
            <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.11m9cey0kia0w918tek2g125pr33].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.11m9cey0kia0w918tek2g125pr33].[sum:TotalDeathCount:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.11m9cey0kia0w918tek2g125pr33].[none:location:nk]' value='67' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.11m9cey0kia0w918tek2g125pr33].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.4392818212509155' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11m9cey0kia0w918tek2g125pr33].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.11m9cey0kia0w918tek2g125pr33].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{71DBE6FC-500F-4CD2-A016-22FA2B536F3C}' />
    </worksheet>
    <worksheet name='GLOBAL NUMBERS'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#555555' fontname='Tableau Semibold'>Global Numbers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau  Table 1)' name='federated.0vsv0mw0a7sq5v1fi62ws1r7c3u5' />
          </datasources>
          <datasource-dependencies datasource='federated.0vsv0mw0a7sq5v1fi62ws1r7c3u5'>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vsv0mw0a7sq5v1fi62ws1r7c3u5].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0vsv0mw0a7sq5v1fi62ws1r7c3u5].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0vsv0mw0a7sq5v1fi62ws1r7c3u5].[sum:total_deaths:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0vsv0mw0a7sq5v1fi62ws1r7c3u5].[sum:DeathPercentage:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0vsv0mw0a7sq5v1fi62ws1r7c3u5].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0vsv0mw0a7sq5v1fi62ws1r7c3u5].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.0vsv0mw0a7sq5v1fi62ws1r7c3u5].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.0vsv0mw0a7sq5v1fi62ws1r7c3u5].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0vsv0mw0a7sq5v1fi62ws1r7c3u5].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0vsv0mw0a7sq5v1fi62ws1r7c3u5].[:Measure Names]' value='126' />
            <format attr='height' value='43' />
            <format attr='color' value='#000000' />
            <format attr='text-format' field='[federated.0vsv0mw0a7sq5v1fi62ws1r7c3u5].[sum:DeathPercentage:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' value='#00ffff' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#e9ebe0' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='cols' value='1' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-color' scope='cols' value='#c0c0c0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0vsv0mw0a7sq5v1fi62ws1r7c3u5].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.5272375345230103' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0vsv0mw0a7sq5v1fi62ws1r7c3u5].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{EB33536D-E080-4578-BEA9-13853510A61A}' />
    </worksheet>
    <worksheet name='Infected Percent Per Country'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#555555' fontname='Tableau Semibold'>Infected Percent Per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau  Table 3)' name='federated.12njc4q1km994d19dspa209knxd8' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.12njc4q1km994d19dspa209knxd8'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='120' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.12njc4q1km994d19dspa209knxd8].[sum:PercentPopulationInfected:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.12njc4q1km994d19dspa209knxd8].[sum:PercentPopulationInfected:qk]' value='Percent Population Infected.'>
              <formatted-text>
                <run>Percent Population Infected.</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12njc4q1km994d19dspa209knxd8].[sum:PercentPopulationInfected:qk]' />
              <lod column='[federated.12njc4q1km994d19dspa209knxd8].[none:Location:nk]' />
              <geometry column='[federated.12njc4q1km994d19dspa209knxd8].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='1566' />
                <format attr='maxwidth' value='1566' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12njc4q1km994d19dspa209knxd8].[Latitude (generated)]</rows>
        <cols>[federated.12njc4q1km994d19dspa209knxd8].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{16B772E3-A5BF-4F97-B597-4E46AE1C4591}' />
    </worksheet>
    <worksheet name='Percent of Infected Population '>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#555555' fontname='Tableau Semibold'>Percent of Infected Population </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau  Table 4)' name='federated.0gbj4f90ovk7pi16wo2191q53f3s' />
          </datasources>
          <datasource-dependencies datasource='federated.0gbj4f90ovk7pi16wo2191q53f3s'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' name='[avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' forecast-column-base='[avg:PercentPopulationInfected:qk]' forecast-column-type='forecast-value' name='[fVal:avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gbj4f90ovk7pi16wo2191q53f3s].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;North Korea&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0gbj4f90ovk7pi16wo2191q53f3s].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0gbj4f90ovk7pi16wo2191q53f3s].[tmn:date:qk]' scope='cols' value='Month' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gbj4f90ovk7pi16wo2191q53f3s].[none:Location:nk]' />
              <color column='[federated.0gbj4f90ovk7pi16wo2191q53f3s].[none:Forecast Indicator:nk]' />
              <text column='[federated.0gbj4f90ovk7pi16wo2191q53f3s].[none:Location:nk]' />
              <text column='[federated.0gbj4f90ovk7pi16wo2191q53f3s].[fVal:avg:PercentPopulationInfected:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0gbj4f90ovk7pi16wo2191q53f3s].[fVal:avg:PercentPopulationInfected:qk]</rows>
        <cols>[federated.0gbj4f90ovk7pi16wo2191q53f3s].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{9CB1CC1B-5847-435B-A1A4-981F8CFB4C08}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau  Table 4)' name='federated.0gbj4f90ovk7pi16wo2191q53f3s' />
          </datasources>
          <datasource-dependencies datasource='federated.0gbj4f90ovk7pi16wo2191q53f3s'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gbj4f90ovk7pi16wo2191q53f3s].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Algeria&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Andorra&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Angola&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Anguilla&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0gbj4f90ovk7pi16wo2191q53f3s].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gbj4f90ovk7pi16wo2191q53f3s].[none:Location:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0gbj4f90ovk7pi16wo2191q53f3s].[sum:PercentPopulationInfected:qk]</rows>
        <cols>[federated.0gbj4f90ovk7pi16wo2191q53f3s].[tmn:date:qk]</cols>
      </table>
      <simple-id uuid='{12EA2CD4-5471-4112-A3F8-8ADC6C5BE444}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='768' maxwidth='1024' minheight='768' minwidth='1024' preset-index='2' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='16' param='horz' type-v2='layout-flow' w='98438' x='781' y='1042'>
            <zone h='97916' id='14' type-v2='layout-basic' w='98438' x='781' y='1042'>
              <zone h='50130' id='9' param='horz' type-v2='layout-flow' w='98438' x='781' y='1042'>
                <zone h='50130' id='7' type-v2='layout-basic' w='98438' x='781' y='1042'>
                  <zone h='16146' id='3' name='GLOBAL NUMBERS' w='44629' x='781' y='1042'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='33984' id='5' name='Deaths by Continents' w='44629' x='781' y='17188'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='50130' id='6' name='Infected Percent Per Country' w='53809' x='45410' y='1042'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone h='47786' id='13' name='Percent of Infected Population ' w='77735' x='781' y='51172'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='47786' id='17' name='Percent of Infected Population ' pane-specification-id='0' param='[federated.0gbj4f90ovk7pi16wo2191q53f3s].[none:Location:nk]&#10;[federated.0gbj4f90ovk7pi16wo2191q53f3s].[none:Forecast Indicator:nk]' type-v2='color' w='20703' x='78516' y='51172'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1050' minheight='1050' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='21' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97916' id='20' param='vert' type-v2='layout-flow' w='98438' x='781' y='1042'>
                <zone fixed-size='116' h='16146' id='3' is-fixed='true' name='GLOBAL NUMBERS' w='44629' x='781' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50130' id='6' is-fixed='true' name='Infected Percent Per Country' w='53809' x='45410' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='253' h='33984' id='5' is-fixed='true' name='Deaths by Continents' w='44629' x='781' y='17188'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47786' id='13' is-fixed='true' name='Percent of Infected Population ' w='77735' x='781' y='51172'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='47786' id='17' name='Percent of Infected Population ' pane-specification-id='0' param='[federated.0gbj4f90ovk7pi16wo2191q53f3s].[none:Location:nk]&#10;[federated.0gbj4f90ovk7pi16wo2191q53f3s].[none:Forecast Indicator:nk]' type-v2='color' w='20703' x='78516' y='51172'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{2CE05B9B-EAAD-4923-951C-C84CEE0005E3}' />
    </dashboard>
  </dashboards>
  <windows source-height='93'>
    <window class='worksheet' name='GLOBAL NUMBERS'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vsv0mw0a7sq5v1fi62ws1r7c3u5].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9EA4B56B-0F3D-4083-A284-70E66B86C5F5}' />
    </window>
    <window class='worksheet' name='Deaths by Continents'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11m9cey0kia0w918tek2g125pr33].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8A02D6F3-B842-4EA5-9FC0-50505C9B8F90}' />
    </window>
    <window class='worksheet' name='Infected Percent Per Country'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.12njc4q1km994d19dspa209knxd8].[sum:PercentPopulationInfected:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12njc4q1km994d19dspa209knxd8].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{93F85F36-F29F-4B9C-84CD-FAA7999A3B28}' />
    </window>
    <window class='worksheet' name='Percent of Infected Population '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card size='31' type='pages' />
            <card size='46' type='filters' />
            <card size='255' type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0gbj4f90ovk7pi16wo2191q53f3s].[none:Location:nk]&#10;[federated.0gbj4f90ovk7pi16wo2191q53f3s].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0gbj4f90ovk7pi16wo2191q53f3s].[none:Forecast Indicator:nk]</field>
            <field>[federated.0gbj4f90ovk7pi16wo2191q53f3s].[none:Location:nk]</field>
            <field>[federated.0gbj4f90ovk7pi16wo2191q53f3s].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EE8DB92A-6A3A-4B91-A1C6-42D3C0D1EF1C}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Deaths by Continents'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='GLOBAL NUMBERS' />
        <viewpoint name='Infected Percent Per Country'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Percent of Infected Population '>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0gbj4f90ovk7pi16wo2191q53f3s].[none:Forecast Indicator:nk]</field>
              <field>[federated.0gbj4f90ovk7pi16wo2191q53f3s].[none:Location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <device-preview visible='true' />
      <simple-id uuid='{B2455463-1C5C-43FC-B71E-77AA9C838073}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0gbj4f90ovk7pi16wo2191q53f3s].[none:Location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0gbj4f90ovk7pi16wo2191q53f3s].[none:Location:nk]</field>
            <field>[federated.0gbj4f90ovk7pi16wo2191q53f3s].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FE806BF4-C901-49CC-B8D9-F27343E40170}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9eXRd13no99vnnDvfC1zci3kGAXAWR0mkRGqyZGuwJSe2Y8eJndixn5N0
      NW1f/2jXav9o1urqa7uy2iRO85K0L6nrZ1u2JdmWJVGDKYmiKIrzDJCY5xkXdx7PsPvHBQFC
      AEiQBCmKvD8tChfnnH32Phf7O/vb3/ftbwsppaRAgXsU5dNuQIECnyYFAShwT1MQgAL3NAUB
      KHBPUxCAAvc0CwTAzKV49+03+O0bvyOXjbDvd4cXXPzmvn1L3mTf7PHJ4R4+OnEeIznDuY7+
      q1bcdeYwXSORm2h6geWITQ7T0T+24Fj7iUO88d7HS17f03aKWHaJE6kp9h04DkDHueO89NJL
      nO/sv6E2TQ73MDwZAyAbm+Sll17izf0H0a3ly/RcPMMrv/oN0bR+zfsnZ8YWPfNK0K785bWX
      XmTDYy9QV2wHK8f4xDTnjx3kbOcgO/Y8yWD3RV5+MUTLzsfJTVziYu8IT33pa4yNjwMwNdzD
      vnfOsbbyy5zrGGW4p53nHn+Afcf6yYx3oBsG9qJSEhmTTRWCE2ff4nRJCU9sX8P+Qyeoa72P
      9OQgUpGU+IvpHhhl9yNP0lQdvO4Hu5eJTQ3TMW3n0rH3sICaddt459V32PHksxx6dx8D4xGe
      eeH3OPTWqzhKG+k9+lscLVM8t7OeA0fO0LRhB/bEEF39QyQcNUBeAB564S949T//M87sA5w4
      38V9ux5jsO0Y0u6jtcrL8fZ+Htm7l8OHPqSovI5qV5quiTSq3Y0W7qQn6uB73/8exKbIOsqp
      k5OcPN/J0MWTaEXlbK52cWEoyvb7d1GmxXjnaCff/6MXyKSi/OxXb2IvquCh9eVMUcZo91la
      q/yc7JpAqnaavCn2nx3ja88+ytmOPir8HtSSBrRIP+sffooSp7rkd7VgBJhO6NT6JD/8P/43
      JpP5YyfbevnWH32NYwcPYPf4+drXn+fkR0eJRmMYiTBtXYMLbviFzz/KewfyI8f4+BgYWcam
      wkSSOfZsX4+nvAk9MQ3A/XufJD01zIH3D2AoGn09PUyM9LF1z1PYrBzpTGY1+8U9x0w8w3NP
      7KZzYJp169fz5OPbOPjBUaSe5tyRD9D9a3jmiYdoaW7h6S88zcH3DyA1jd6eLk5dGuAbL3x+
      wf3efvUl1mzYzoEDH6Bpgp6uHvr6+nnqqSf56GQ7f/TNP2Sq+wTTSYPevj6i0xPs2Ps04fEh
      mltaeOjxpyly5O/Vce4Y3ZMGtuQgg9NJRnv7mIpO469upbEqQDw8TVX9Gmx2JwPtJ2i9/ym8
      6RH6JqJE4xnGxseIR6dZu2MvmfA4zc3NbHlwL0GXRU7z8/gTj9N19hi9Y9PLdn74hAA8uus+
      fvzL13F6/Thmy9QE3fzkJy9St3YTipHipz/+JWs2bWRgoB+v1wss9KP5yptQc2EA3IrOG+8e
      WrJiIWycPvw7Uoqb+zatJZVMU11bA6oLv88BqoaLHIPjoev5mxe4Kk4aGiqwu4toXLuJcM9p
      3tj/IeWVVex743U2bmglmcxSU1OD3yF59Z2DC0o//eVv8OznHmJtyxrSuqCmugKXtxiHJmiu
      LuFnL/4Ce6AemUtRU1O9oGywrJwj7++bU7XWbXmQb/3xH7Ju7TrsMkdFTQ02oNhfDEBF82ai
      vSf55S9+gaOsiRPvv05fRKGxooiTHx9gdDK64P5efykdJw8xHk7l76HYqfNLiqrWXfUbEQVP
      cIG7ESM5w7/95GW++q0/I+jRlr2uIAAF7mkKZtAC9zQLxoYDn1Ij7nUaZ/+tFrquY1lXsS8W
      mGOBCiQ+zZbcw/xPwF+v4v3+uTtBb8K8rjJWbIbvT/+QYqdF94yd9yq/TrJ0LQBSSohNgy+I
      LRlCXPgAq2krG6c+wHL7uRB8FFsmiu4pBT0LqgreEoS6vO5tpeJ8+cwP2VWcXnEbpZTEDTg/
      A/s2/wBR3nBdz7gUq6ICOfovUPr6B3O/O4cvm0ZzeNs6cPReovjk+dWo6gosSl57FffgaL7O
      waG5M97z7UCC0l+9ga+9e0Ep5+AwzvPtLG8Ym8e//238R04uOGYbHEbJzeDtyDtdig4fpOTQ
      kWveyzE8dM1rPk2EmaPYblDskGwu1Wnp+S32iU5kLoM61smujn9FTA1g9F3gm6VtmD3neDY4
      SC2TBFODfCv5c3xHfsqfhv6ZZ3r+I3u6/u2q9SluHx3BbStun5SS7hj8uEelrXwXlFTd7CMD
      n1CBbpRsYy2uEYXAW68jFBu2UIRc0TE0y0WutBLbVILw448ReONlNMuNvbeTbGMTqq5hpUdI
      PPFVUrXX6+xS0EsrMBwJSvftw31hmPDjmwl+dIbIgzsAA6OiCdvAKer3/Zb4Aw9SfOocyeoS
      dF+Q4kudGEEblqeO8K4tS1fhKkJk41T86z+SW7cV70cfYJS2EHtsPZ5jbSj6Y2ixGNJXTtW/
      /B3Z+no0ewNmeghhSWwpge4GVDtaJI7uV1F1FSlVlHgIezTD2A/+Ehw3+QdYBcpi3fg8Et0U
      vNXn5vnmKHWjL9LT4yVhaGyqSnPEE+C+1K8JBixqxSQHR1ycaH6eXaF3GDJ87A5MU+Ex+EV3
      BY3uMM5gF5my1mXr7EsoSKdErED3EEKgCYnU7IwqAYTNvirPvSoCAE4ydWUo0SzSV442M4Gl
      CbION6bbh+5RKD51nmxdM1mbg0xpMVZRAFQbUq/A1G5M+crV1mKUlKD7Jpj54h6klER2P0Cm
      pgpwQmaS1LZHMIp6MUpL8+fKfCgZQabIg2KmEcbyX4FhB1nWQK7Yi+kvwXr4EfTKGqQiiT72
      KGhussXbyNbV4nWBWVyMGWjA3m8i7R4ywobhdQGgTU8hNQEOJ8XvvU36vt1kVAVrJUPRbcC0
      uYjnVI7FalC8koye4P46k/uJcWzMRbFL4ExO0rb5uzT2/wuWq4ierAsjUIc/nCaoRRnQLQQq
      j5dOUOoRiI5XaTO/ilrZtGSdTc40J6cFO4MgrtEFQhnIWoKv12X5e1/ZqllvFswBdsbjq3Tb
      AtfDD+x2/tyxesPAa795ieNGCZmyRiguW3E5z/BpkiVr8Iye4/fM/TSUSOyzLyeB4B8STzFV
      9xBKeJzycBvfcHzI3/v+S/x9h/mK7yxlXhO3bf5+Z4fgwpjkUuvXUFuWUHdiITj+Bj/wdVLv
      uXrbpjOSd0cVKiv9nFUamdz51RU/13LIVHzhCPBmduamb3qjJJMZPB7nPVc3gEctZjX1oCdk
      P4+Ov8P54SImtBJGS5oZ9TVieUuQgYW6sxhswx4eIFW7nUTFJoTNTqJqM++dOosvCk+WT1BR
      JJBIvi7f4uftYUJrPw8hk4AbykePEWnaxfHOATbmZkhmJGkD6krtbKszEcLCM/gKbUYcff0j
      C+vOpbnf6KYj5aTec/Wwl/GUIIVGnyxl0lt7U9+P1LMY7UcQl46ulgpU4E5CIBHCYostAkQg
      0ocMC0KWjfe8TfS2/j7FfR9RL4fZYB+jshTe6WrD61KgqIKjvseoq/ax1TZMhRcsaXFhQkO1
      LKKxDO6ewzinLvJWppRgtJ3xovWc3/lXlJz4n2lLBpn0teAeDvFXzk621ApSOcnF/rPIdXsR
      V+g6is1O2l9LOpsBri4AmwKwwZ/jl7iQrQ/csMXSSkTQTr5FcOgMz1WaBQG4N1AQQuIXOR50
      D/BU+IdE7NBaNu8r+GprePZTmF3pS/SkHbw2U0d5XGdkxqJCjdDj30muIogWHSLgNOmjjj9e
      cw5P3884pn+FuhKVtFtlyr+GjLaOH12Y4s82z7CxSuF3IQWMHNjmRzqzuJy2+s/x3NCvlm25
      JWE0KZlWfJwo3k5/y+cRyg3OAIwcuXd+TDA1yja/QV9q1SbBBe5sLCRyNmxRUuaxKFtW57bw
      u6DayFGKjtdmEp8K8e1dKabTH3JerMfrmERPZPmS5zxFTsGjjRYXB86ydr3BxAwota009L+D
      URJg/4yPL1cO8ZcbxvnZ/h8y/fCfoRTPW/yqO3+HR5mBZeJ1BnUX/3fN1xBVzVf1K6wEMzaD
      22HnEZ/J9oBk9GYE4N3XfoVe1EBzqZ3+qSQyOY2zpIpHH97Gvt+8jr+6HqeZIWPzEhof4/kv
      fYFcZJR3j3VT39TI+OkP2fD8H3HqFz9nz3e+yc0YtTpOH2UgrvGFR3dy4J23qW7ZxFDneRrW
      b2Py3Fk2vPAMJWR5/ZW3Ka0u5dSJczz7tW8yduI1KvZ+i8rVsagtS2R6grbOEfY8vIOzJ44y
      PJNlz7ZmDp7q5IVnnrgldUquL8RLArqlkLY0bMKiymfwVV8fIChvkSRz0BwwaOYC+CGdE9hU
      ABW/S/AHFb2cHLIY8VYghMJAzWNQYbBr8l8BmIjBV1rj/Oq9HxJ69r9DOPMS2OjKsdmz2Gtt
      WPkneMu7G6V2PqJTGjrkMgiXFyseRri8KzeJhkZ5xOphbVG+vhL7TQiAzeUjm00xPDSO3V/L
      9OAE+GuJhEOExqcorm7kUmc3G3Y+SCISprt/mGKRX2SQnBkjkjLpvHCWmG4xORmh9iYmoVlD
      oGdTRCIRpseGSNoCxEYGMD3lkIjQ3T1Ia4nK5OQkpbWVVDesYbDjDPGYDpNTVNb6brjulZBJ
      penv7qJ57Zq5Y709g8QjEa7PX7syluv8S5kaL48KllTIWCpZqSI+UX5r7XxBgYJE4rbPH3uv
      R8HQXBwcDaI89UxeP8+kcEx1s94TAgRHZgLETRuiWIDDPVc27q5AML6gvoQueTNWzkTtTsYa
      H1qg78szB/D0X6QqnaA2EaW7aROjz/zJir6Xut4PcdskHi3vWPs4VbLQDDo5PbCiGy2LNJia
      jlNWVrLolJGMEMdDice2RMHVscRMTU1TVla6RLOSTMcEZQH3EqXuACuQuxiP279q90v8+n/H
      HO1YdNyUMFzqpLnscpcSs/8kIMlZAkMquFXzivNLcbmMQCBI6/BvndX8QcM4v7Y9y1j1bvae
      +1uSM2GeWmvhcSgMhQU/iu3CaNiGCM6vFZCTgzxy6p94pm7eIfJ6OMjHe/5rhFis61vjA7S+
      9SMejoYBhRNVdVz8+r+/5ndiDLTzwsUfUeYyafRCzoL/tf6vVnkOILQlOz+A5vGz9JnVY6nO
      DyA0D2WBW1z5Z4j5EUIiUMjbjSQ2xcKGxbWjwubLD8xIXjI/R7bSSXs8jZXpxrLXccDcgvrw
      HoZO/YLvN3YzEoHNiWOcKV64yoxAFQG/F8jHBEkpCdtLluz8AKKijpGNu+m6cJiBtTsZvf+p
      a7bWHO+n+uxrKDaTcme+jg9zVZSMnC1Mgu9mBCIfyCbmf587Pq/8IFAWvNMBspaKAHQpcAgT
      Tbl8xTw5A/bH1xLf9jgIhYNjpbiyMwiHi6BbEh+9RGjd5/nZoEa1HOKcexNCW6gBCM3GkdK9
      bE+/g00RjKeht/nJ5Z9JKGQefJojDz49+yzzmDPjqCUVC3Q9Kxqi8fjP+U7ZJO0JgVuDt+Pl
      HN7+Xb5z9m8KAnA3crmbpw3oyTrwYNDosebe9rM9fQ45qwJd/iwQZC2FnFQo1nQ0MX/+yoKn
      YqUMbv1jhJJXX8zKFhII5PQwj3CSbZ4YJyaDvNn4bfoVFWu8f8kON9n4MCdOH2ezLYyUkHMH
      bszOn8ssmujY2j5gjzO04PBIxVZEURBdioXtUZWldeTbgcftRL1R++5nuG7Ir49e5TuChJdj
      ZTQT5kWziY2aYLsxysCQRV1J/m1um/vrL3yzSyQ+LbdMkNq89Jxx7FxgmrwsCBSXEZl2oyox
      dpeGCQ2/wrHar2FTJJZpItRPBEBpNl5b913eH7tITewswnWNuIhlUCsbATAnh0BK1Ip6cqi4
      NEnWBHX2ce6LnKW33c9HSf9CAQgGVh43UuDOZSonmEjZ6V3zGP1ltTjL6uhF0ofAGu0hdOHX
      5CIhvr1H4JiTvcUqzuXR4EqrkrjiOplOIKW1SF+X2TS1jtjsPSzcuTBSmjyRO8ihQUmu6f5F
      bVaKgqSK9tLZ+vCNr0uREplOYMVC2Jq35o8Fq9HGJK8kqnjcPYGUklDKRNuyiT63r7Ak8m4k
      aap8oDRhxWcQ5fUIIfKdVAiUmhb6dv4pvTE7b7cL5v9bmsWdf54/8x9CjPciP7H6TDjdnNUb
      5+7weH2c70z9kEfKpmke3p+35S/DjXp5pWWS+/h16vf9HaXp0JwqpDRv42d136Bj/ZdIyby0
      Hw3sRubS2Ic7CwJwN3K07gnGGx5E2770ZFL4y9E2PcSJAUnn+Lzuf704NPjTxP/LF3v+DjU+
      NXdcP3+Ibuq5ckRpCkgQkgcrYphjfddd17UQiooIVFJhxHCl5jMOCs1GOqVTdOp9ztma6Eja
      0H1BhKKx7eJHBQG4G8lVtqA2bUY4XMteo+78PKa/mve6tRV3/aWEpCFgcX9gir+I/D2be3+J
      c7IDZ7Cc5+zHlrxHYxAenPgtyuilFda6wralE5SMtDOoFrNu/CxSn8/1KCyLRHiCjpDBi+v/
      Eq04ABO9eD2iIAB3JUIsMjcuukTV0GpbSZa20D25zDUo85ajWSSSrKVgynmTKkCp2+KrxWeo
      i57HbcbYVrx8QrPnm2Z4KvQytpnBZa+5XoIf/5K9sQuMrnsMuzSpP5PPV2tFpnCkIzxiT7Mn
      McL27pf472P/yHfTLxNcoxQE4F5GrNlKdM2j/LrDR1a/Mtxhoac4Lwgql9+XFoKMpc4G2M2r
      UBJJc7qNRE6gm/OjhVziv93VSYqjq6gK5TKEi6opzYS4z57h8fEjMDVM6bs/4YnO99lhM9gi
      0qxnAo8NmkqgPiAKfoB7GSWYXxxjVLaw78IpvrxVoChyzvqTZz7kIf9JwaWYJE1tkYUI4MGa
      DP7Q22jq5dL585YFgxEFRUAOG69HNpF0rl7qluldXyXkL8d19FV+ozUhi4opP/gKdckRfGq+
      JUOGQmhc4vZCYwl47XJhLFDHueOc6xhgw7YH2Ny6dMqJsf4OKKolMXgWyjbSWrM4hmXfvn08
      99xzS5cf6OTwiQvseeILVAa8iy8wkpxuH2b7lkY+/riNhx7acc2HP336FNu3X/u6e4XrTYsi
      E2HKTvwEd2KcnVXGFWfmFYQrxeHy/x0OWFMuyOownlBpLl1Y52UByRkKvx0oY9Kzhmndidz4
      KBsu/RRXeorT1S9A3cYbes5Fz2EaEA1h9Zxjy+BFto/0MKgqON2C9W5Jj6EggYgFrmJByq4s
      HAE6zh3noed/wPs//yf8/j/i43ffQSsq57Fta/jdoaP4K5qIdR9mzChjR0sRHRd+xwm3m13r
      Kvj4XA87dz/C+qZq+jrb+EV4is27HqW3s5v711UwbgbY2uDjF699wH/x59/ByKZ55ec/Jau4
      ee6x7fzq7cNIw2Tvg6289NJ+3EV/Qjgc4sC+V4maFk5fDfXFJmcu9rJjz1OcPfQmIFi37UFe
      euklQkkTW3KMiWiap1/4BsWfXmzbZw7hLWFy69epfetv2ejPzZoQ8518oTrEgs+xuMXhYQcf
      +baSa9nN8zMvsSMwv6z28tv/3U6FLcEJPorYsLZ+G5FOYKgOMHSsjuMoqyQAQtXQUnF2nD/E
      +kR+gU+jaTCYUzkuFTJJk4ZoDqvFRWWxYNJcKi+Q0GisCXL80IdzaavD6QS6AWdOnaa5pZm9
      Tz2NW4PtDz1OJjyOoedIpzNzg6HLF+Trv/8MR462kZwa4sPjF1jTUI2ZiuArq8Vus5EY68JV
      u5l1ZQoXuobwVa6hzK4TqG+mZd0W1jVWMD4+wdTYDE88/xwjvZ0cOHAQTYWu7j7iGckTu+9j
      YDpNS0sLT+19gGw2SyZngTQWPVaBqyP85ezwWyCWC4VbbAEqskGzLce3sydpPvtrDp7PciHi
      x7Dmu5WUUCszZCMGa9RRvEd+hnnuA7o3fYtT2/8bxINfWtXnMGpbOPaFbxMTCiAxJIRVFZcd
      MiUujpa7KC5S6I8pbKpaQgDefvUXXJqCJ/bunEtbPT3Yj7S5sWmC0vJKDr3zBqkr+piFis8F
      A4P5uG6ZjfGff/Zr1m9azyMPbqQvLCl2KNhK6vDrY/z8F78kKooYOH+YY5fGaagsnr+ZzUt8
      vGPJ3T5aWxrJmho1VQs91kGXwtsfHkez2cjEQ4TjS213UuCq5DIE7J9waM2KgpSSvKK80Ckm
      UKlyQqXdZNq08wVPlLcTm5jJqBweL+bMSZ2Ok1lU3cb79j10ZiugeQfq7ufz93D7EEWrtPmJ
      lMjwJDIVw3K65ifnArTiMvxFPsz69UzWteKqVPFZJqf6b0N26H0v/YiKLU+xc93NreQvsHJu
      JDWijM/wFyf+F0rt1lX8wgsXxsCshUdK/pO1mT8VF3glV449nWCnK0uDU8eS8Ddl38BYtxup
      51YtodUnUQYu8MW2H1HtFiR0iMyY9GectH/++0jTwDtwnufHP+ZXG38fJTVJee8Raty3YVH8
      c3/wnVtdRYHVwOEhay2OFL2MlBIhxBLxQfnj3xHtaELhETFDbUk+1KE7qfFb/15yZY15b8It
      6vwAhuokM2ZSul5QbodOl5+ulm9iBWpwDF1Er23lldadPHT8RT6u2oleWUNkcLhgBi2QR9gd
      XLLVUi4HuGK144L1BCwyj84rDzYlv5CmxmEikZwMaxzwbSfz4Jdv2tkk9SwyEc2rTMt4t12h
      MSybQJmdwB8v3kbGFAgBhtePtDmx3D7ea/4cDreHSUXDo48XBKDAPIfXf4Wd7T/EJvLq01wO
      H5n/LOVyKQznF9dcRlUg2Xz/ipIQXwthcyBKypHZNNLIIbTFI0mmeg2XItvxG70MuGrpqdxO
      qTGCY2YMkjGwFCYTDbhSYRIbdiEr0wwPdxYEoMA8Snk97w5s57n0SdyzPffKRFb5jws9vIti
      RGeFZVx6EO6iVW3f1WKbRFkNY5sfZyqVZCbl5Huun1EdsACFS91ZQlk/o3XPEK9qzvu3HS5S
      z37v3gyFyETGef/gYRLZhRPFweEhjFxyyTLDg3d2evPV4uJ9v88/l/0epxMKk9mrReYvdI3l
      jwgkgje1jZx44r9FCVQuKHG1MOgbQaYTc5+dsWG+KX7Jo7VTbFK7KHGDwIaCRolbJShjVPbt
      R0nkY5REKkJw4tS9OQIMXOxiw669XDhxkKlYDruexFTtTEbifH1POa8cGkeXdsKJOK2tVWQz
      OonpGb7yrT/BdZd/Y8LpJrXhUcbFeQ7HvDzl6cCUAlWBuun03MgAEmRex+5PKaSkSpNTZyCj
      cfLz31swcsxxk4mtFrXVNR9JsD55lDVVaQYnBD6fHbdDnRubAqV2zndG+cttRxlJnOLdoa34
      zQhfKuu6NwVg7f07OXriKCWllTiKJWVF+SV409NTaP4SHn60lWQsTjiVo6IqiAYkZiZufKXS
      ZwypZzlf+jTe6f2odT7WlWYQCC4qYJrQHErTofvYV/dFvKpFRPVCwybk1DBPnPgXrGQUxbs4
      RGZJobjRNloW1uQgmAYOt4M6a4ALA1BdZiPoX9itHXaF+vL8sRqvzp94T8xZtW6JH+DyzQt8
      OtyIH+CTSD1LQ89vCCul/GHwIyp85tzf9NTxDL8t+zpq6+L4qw0nfsq4s5xJZzm2lq031Yar
      tk9aoOv4wl08FH2V0SmdjU021jc4FvU9KaG7M8G6isVT8lUfASzLwjTNggB8Cmja6v05hc3B
      wJov4z35Mj/TnuQHjnfwzua13bTNwRvJpT247Zu+jMgksC4ex/SVoFbUr1qbFrRP5APbHtMO
      oznghb1uxkImpzoytNTaKfaqV1wLhqoSSVp4nQJNne+bS35jJ0+eZOfOnddsxMzUOP2j05jp
      BOtaG+gcS3D/5laklKiqSi6X43THyIofavu6Guz2W5yo817AWp1BXdidJLb/PiD56ZTOvyt/
      H0URZHWBpbnmLCgyGQXLwproR+k5gUszUVoeIpuKIUd6UKublk10dTP4R49SVhwmbRPYNAUw
      aa2zk0hLpqM5mmvyfSmRMrEUhSmpcaY/R2mRwK+a1AbU5QUAuLYQCEFTUxPp8CiXBmYoDy4M
      b9Z1nf/w4tEVP9DP/sfnCwKwCpj9FxBqMTJYc9P3upzEdsLVTDr3Hm4H+FzQOHWWwZLPI9Nx
      /jjyt7yvP8RYy9PIuvUkUzGq+vYz465Dj6TxqCmSlffddFs+idSzOG2SmmB+9ZvHqZBIS6rL
      bKQyFme6MpQVq1hSsKk5Hx6cMyXrG+zEUxZtI9nlVaCTJ08yOjrK888/v3wDLJPwzAx1VfUU
      lxqon8z3UuBTQW26DyuaXtVJuyit4//J/CU1kbNs1U/wFd+HjER7GB2YojtlMLJ2C4q0wO5A
      cVQwJr6AcLjQQgNobidWdAoUDfQcSkn5tTcFWwIpJTIyifAFEJqNpL2UTM5CUfMJe/0+Qe9Y
      3hPtdipsaHLS1pNh+/or9iQw8/PTIo9K0Vr30gLwgx/8YEUNCpZXc1kTtK/iHlcFbhLBkt7S
      myXurOKSs4qL+hOI0DB2VbLJfBm3luH50L/Q3ePl4sZ/h/AUo/jzEbtm7SaizIcdS2khU3GE
      5/qdZPlYJLjse1hrG8TjERxpS1PkUTBMSVWZxtBklpFJA59Lpa5KyU+YBYRjFmUll5dyWvSN
      5JYfAaanprEDzrLSm8rdX+DuQ9gcUNlMDjjl//eok700Rw6xvSnEpStSn0tpoY73YAgNUVaX
      XxcJyGzqhgQAQCmpmPt8YcrH+LEEW1ptWBI2t9i50K1TX6WxrkHjfFcO3VSZiZoYZj6kO5WR
      c4mSMzlrOQHQOfzBAdylVTzx+NIZlwsUgLwwWDUb6CyuRD/4j4jtQ0hVBX8Fe7v/EwMjM+xY
      rxGZKGci48FKxekq3guf8BLfUN2tD+BwRSgvukBlUOGDk2kcdsHpSybRhEVLnUZFUKXUn1fN
      e0d0JmZMQDIVNpmJLRsObaO6uhxDcWLBqgQ0Fbi7Ed4S+h7/r3Cc+x12m43a9t8KCJsAACAA
      SURBVPN8bmOcY1mFmhIXW4on50Ko3zn9Oie8Jcib3O1dcfsYa/oS/QMjDE1M0VCp0Vpvp71X
      pyKg0D1ssKnZDkhCEYtcziJYJGjvzeEvUnhws335WCC3Q+XcufZbsoNJgbsT4S4it/urJHa+
      gK+uDgE8UGUiJ1IcO5Mmp0syOYk3F+ax/n/h/gv/RJM5gLRuvJcJm51jDX9OtGwrw1NweCjI
      QMzDeXMTZ6q+wY97t3G6Q8e0LFrrNex2wfomG5msRTS+rAoEZVV1VJTOLLIk6Jkk3YPjbFjb
      TH93Bzh8TI0MLvADrBZ9w5NMhpcOTvsk5SUemmrLV63uzzTW6qUbuRGknsNrxbGkhaIoBL2S
      obTF2LRJvCdBQBNIe5aiTD/2vv3kzApG1t342mBhs3Ox+qvI8hfyCcFmu4EABqwN9Ie3sGPo
      ZTamooSiFm98mGbvdgeWdRVPsK7nKC4r45P5xWxOD/6i/ETH6XIxNDFNTVVwzg9gWRaWZSGl
      xDSvT7JN08Qw5hcb7z/Zy+tH+1dU9ku7Gvlu5cJtYH713mnCyZVFIH5uRxNNNZ/t7NhznmDT
      4HYprlZ0Or9Q5YrtT1uHX6PMHGY4IqgPwEedFmUOk+yYyeYKiW7BZNKgvFji0i7x2mA/Q+UP
      LJjg3ghLZcMTigLuIkhEyHklPpcg4FPx+/LKz7ICEI/HySWS6CzcwzybihOLxrA7vfh8Purs
      PgJF7jk/gKIoc57g6/ULqKq6wJ1/PeEUQohFoQCH28fpm1zZCLKtpYrWhrskNtBmh+ztUV6F
      ouTNmsX5XiKzae6T5/AHVCbHJDNDEkXApnIAE8jvLtnoh8sh1c80ZljX+38yIQK8G/gisrgM
      xX9jvoJPcjlz9aZmB5FwGonA553X/Jf8i091XcDXtIV648KiZBgOt4916+a3rby8lUHBD3AH
      IfNOyrkNK24hwveJ3Vz0LF3DEKgy2FINgyFIJa4emmFXYV2pxRpzml3mj8lMwrHxtRwqfxYR
      qM6vQ77BUAqhKODy8nL6D9iR/Al+j6Sxar7bLykApU3NfPTxYTRXEfdqfqnP9PxjiU0r5k7d
      4khdYXdSX11CddEY8YxAZC32Lp1kcGE5BPZZeXVq8AU62TbRyf/l+B8QS4RWz7H8Os0FZANr
      GBxrosLWS++IQSYnqSpdJhZIaC42rVtDR+84OiyaB9wLvHuqj9eOrCx56/O7m/j+nSQAigJi
      1mf6iQ4vI1NQXHrDG1FcE7uTt0u+wvrUf8SuSqaS4LODywaJHFfZoX4xSeHOq3NXQVrmineQ
      TwQ3sqlhmImQSVmJwtCEsbQZNB0L8dbvPlh5SwvckSz1thf+Uri1qaAwg/UcTTdhV2FDg0Jb
      WGHI1BjJKuSWmJoslYcomhX8vOK7CMfV961baecHCKvlZHVJRVDF51HQ1GX2B3AV+WlZ04wd
      WfADfIbJZ3KQSENHZlLzHf82bAh4JPgsaV3BZVOoDwoq/YKNDRoDhkbnzLVVlpflHjKBFehO
      18FOeQSHbb7uWNxa3hEmjTST8dS9uWbyLkBaFjKVyMfpR6ewwuPIbGrWR3BrRwDIjwI/Er9H
      Z9RF1shvxqeqkuZKhZxNYTR+9d3JsvYbiBWSMp8heqlTlkV5qitfn8zXGyhWluvfKv6yEnqO
      d121vmh4mkgiR2R8kMqGBsamEmzZ0LxqfoDrWa0ppVxQ9nqxpPWp1b1aLDAhKwrS5UGmYqjB
      aqSeQ+pZhGmAKZA22y1ZpHIl0zW7+HluCxs//geqyqJoaj6NYk1QoX8caljaYZczIeyuvv4K
      hVhWJRJCkErZ6OmIoggIZxQSYX35F7yKTrCkAoPlnQWmYTA+MUFDTRVDQ5OUlvrvKD/A9aAI
      5VOre9WZXREmhEB4ZhMPa7Z855BW3lFm6GC7DaZruwt7URUT0SgNpdAzKXFrEkNf/gXTlikl
      29C0ukkIhOBcyZM8UvwbVBUGJi02uuXyAmDkckwlYlcNhQ6UVbKrLB/VV1m9uvpagZtAmc3q
      bBqAAGV+m1RpyXx6Ej0H2spMiDdLkZVmrN8kO2ZgIChbo1IeEJwYk9x/RTzcWEJwSrZwofwx
      hLr6tsdI5XbahvazpSLB5LRJQ/UyL/dQ3yUmch7KfDFycM/6Aj7rXFYHrlTn5pxjV56zrMW7
      t68irmyMEgesL5EIBUZGDDJOFU+xyljcpNInOZmp5beNf4rwXMXmf5MIIQiLAJBAAtOJpTbI
      AFSXBzMVRbUVuv7dgBBi2YhLIcQt7fzS0LHScYLOy/ULaryCZEwyOWWhzx4+oW64pZ3/Mj2i
      hawOOSnQndrSAmB3OlEB2+zPAp99bkdYxJJEJvGIFKVOEyGUObtPjUOyPiCp98NUxs5U6ebb
      0pyRqj28edFDS5VKdXCZbVLd/jJam6rIZvV7JhtagVtELo1dAUVREOLyxhoK41GYnrCYSAp+
      6X4ew38DVp8bQbUxWvUIVSX5nr2sHSyV0ZkZGS04wgrcFJo0r/A8z79ODRPWOiSvxrcwVbf7
      trYpoflJ5aBnctl9gnVOHjmNx19yG1wmBe5m1ofPIRSxwNgkEKR9Af6m+hmytZtue5syFRv4
      m+nvQ03NciOAje0778MbDCwyg4YnRzl76gSxnKS/u4P+oVGOHzlCLDTGiQtXd5wVuLeQuSzr
      wudwzVk053eKD9gMMrUbrxnstqJ69Nx1XS+EQJTVI9RlokEBLMtcekFMzqCmIkjGkLd8RVjB
      E3x93FHOOABFIZTUaa6Y33isLWbj7YovEW7atGAV2c0gbPYbDvNe8hsbPHeGCd0iWF66yApU
      WVPD8OgkATLIO3xF2PVwV3mC7xSi00SzFr7ZTccOp8o5VfoAkTW7V9+4YllwA+bcJf9qTq+f
      rXU1uFliZalQqa257L5zF1aEFVgWOTPKhOkCUgDohsVE1bZbYlm8UV/GkgJQvqbxZtpSoAAA
      eiSElcuRMSSGVDhf8fDVV3d9ChTG7VvEK++eWnFGiid3NN1ZSypXAylxzAyxrsjEqQkOmE1M
      1D14x/mVbkoAsqk40YyFXZH4i72Eo2lK/L7Vattnmg/Pj6w4I8V9TeU01d7iBt1uhMDIZnHP
      buy40+rlw9AQemXLp9uuT3BTAjA2FUJakomZKZIVVYQzZkEACswhkxFKA3lr2q+cj91xnR+u
      4gleCcLMEU9lKauqYGxiBq/tThvgCnyaGO4A7TOC/oRGd9Pn8gelJHf2INbAxU+3cbPc1AjQ
      sGbt3OfCeoDVI5fLoesr31PX47mOVAu3EaWqibPtA4ylwaodRa1pASFQfCXIoqX3GLvdrPou
      kZc3yVNuYuG1ZVk3XP5myn6W676MqqqrskvkaiCzafTf/AMBI0pFUyNd676EKClfeWTqvP/s
      lrHqVqB81J+4qeRLl+9xu8t+luuG6/Ne3w6Ew4Xt9/6K0Ml3CYeG0Izsdd7g1rTrSm6JGfTK
      P2JfdwfS5qW6Ij/kJaJRVLsCqptUZJKS8hqmpyapq6ude94FnSAxxuG+DDU+Bbsm8AfKSSQj
      DA5O4Pe78BaXUVFasmTd85gcOXKSHVs3MhVN47arJONRymoacGgL37hXlo9NDtExGmFD6xqi
      8RRBvw9Lz3Cxc4CSgAe3J0BleWDJsgB6Ypqz/WE8ZhjDVU5tmRekRiwex2UXOIvLKHI7FpWf
      HB0kFIkRKKsmk0njdSg4PEVMTs1QVVZMKJrG7bKjpxJ4AhV4XfarPPuni3C4cDx845mfbzW3
      PkHMLONj4wwPDROJxQiFooQmx5BCoe3oQUbHx4hfJZ7J77YRjYdJZASdp09huoqoqCxFszkx
      sqlr1h0ZH0TXc/SMhIjHE8RiEcKhEH39w1ct5/KXU2LXae8eIZWIMjE+xujEVL5u1Y6hZ65a
      fmB4gkw0hK+8jqAL7C4Xgxcv4QqWEYmE6e1dOvNcJmvQ0FBHb1cXwbJyurq6GOzpYXygh+6J
      CEiDWCxGODJDb1//NZ+/wPLckp3iryQ6M0UonsPnFGiuYjwOjUwqhqm6GRvspnndRkaHhqlv
      bEJdShzNLFkcZBJRUvEo/kA5dreT6dExikoDKBIc1wjDyGQyOJ0OojPTJHVBoNhLaHqaktJS
      3M7ll32aeoaBkUlqK4NMRVK4VQtTc2GmkxQFAygIHI7loxkzmQx2FVKGwKaAw2Ejk84xMTmF
      y67g9JVQ5F2c+UxaBgNDYzTUVTE4MoHHLlAdbmLRGKUVFWgir+5EZ0K4iwP4PK4F5e+UOcBn
      gVsuAAVuPx9PJAllCgKwEu5oAZieGMZUfVSUFi86Z2ZTGJobxy1a6vpp1l3g9nFHC8DZU8cx
      NTc2K0NGt3Cq0D86RXNrC04jQ9pZhNtuY+DiGWrX76Sl/uZ3HrwT6i5w+7ijBSASiSClzMfa
      CzAzCcamY5RXVuNTTeKGJJ5IYaaTFJeWUxpYvUjDT7PuArePO1oAChS41dw2M2iBAnciBQEo
      cE9TEIAC9zQFAShwT1MQgAL3NAsEYHpihLa2dmLJq8e4LEcyNkMsuUTEnzR4983XGAunMLJJ
      JqYjC05HpoZ5452lN+WLzUySzC6VcyfL6VNt+fLTE7S1tTETW9kSxLZTp7mylUY2yeRMDCM5
      w/FzHSu6R4G7A/Wv//qv//ryL/t/8xPMojrefOM1NjbXsO+t/ZRU1NJ1sY2BgQG8dtj39n4q
      auo49O7bxA0bmZkhTp69wGQ0w4VDr/Pu0XY2bd2BXWR59+03mckIpruO88bHF3nwgQcQ0X7e
      PNaHER+n/fxZDJubX/3bP0OwkYCW5r2PjlPftIbuc8c5cXGAMwde5Wj7JBs31PLOvn3gKkGk
      Q7z17n46e6e5f8cmju7/DZNmEe+9+Qb3bWrhrX1vYvMFGe2+yOlzpzE1L6N93QSrApw91UHH
      6ZM0blnP/tffYCKaJdx/mp+8+i5r164lnZOITIh33j9MVV0j505+zLkzZ3AHqinyFFK/3G0s
      UoF6Otrx+ct49aWfk0hGeeXVtzh84HfUt2zkN7/dxzPPfZG+0wc41zvOL196iYGOc1S07uD8
      iY9pbmnhocefpsgBbUffw123la5jH1Ddso6tDz5CVWB+5dLp02d4aPc2PvzwFOvWbeDppz/H
      iy++SGiog3f27+fg+WE+t+d+WlqaefzpL3DsrVcZCiV4+aVX+O3rb/L0s59fsH9xf08HTp+f
      3732GruefJp333qD9tNn2PHoE7z/9pucO30akyxnTrcDYOk5srrBG6++SmNzM5t2PERtEZxu
      72Hf2wf4wuM7eO31/Zw5c57772vi8Gy5AncXiwTg6S9/g+9966v4ikto3rCVJx+5H1dxGdWl
      RXidGu0X20F1Ul5Vx1eefw4Al8uNoig4HQ56utrJGOAr9jPQ00EkY2Bbaqah2XA77QvWPJQE
      y9i590l2bGrFTM7Q3tmLw+Gkq/0i7iIfNQ3NfPGZJ9EUaG+7xJWLBh9/+sv85fe+hd/n5mJb
      G5ZiAyy6L7WjOD2oGJw5eY7LUddjfReJGg4CPjeK08nYQA/RWfXNrkra2y/i9Bah2Z04tELQ
      z93KAk/w9MQIvmANDg0sI0dXdw8VNQ2kE1GqqqqwjCxd3f00trQyNdKHtPvw2SSOojIioQmq
      Ksvp7uqivnk9dhVGBnpx+SvwuxSmEzrlgSKMbJJQXMfS01RVBBmbiuEQJt7SCmQmTu/gCI1r
      WjCSESZjGdbUVtDV1U/zumYGe7pw+yvwuxXGQlEcmoOqqnIi0xPYfEE8Dg0pTXq6uqluaOaN
      n/x/tD7yCGsb1iAzMWZSWTRUVEwCleUM9PTjcruprK5ipL+b4kAFyYxOaZGD3qEJWlvWMDE+
      RlmgiJmkSXngBrbuLHBHc1eHQkyOjRGoqipk/yqwLHe1ABQocC0KfoAC9zSrIgDXuw9AgQJ3
      CoURoMA9TUEACtzDyIIAFLgHkRIrM4609IIAFLi3kNLCTA9hZSeB68gMZ+kZBsdnqAp46B0J
      URnwEE2bNNbdpg2OCxS4SaRlYKX6keZ8MrUVC4Bic+LQFKbCcao8NkZTOj4hF+wKWaDAHYuV
      wUoNIK0rUhCa5soFwMymGB0doaK8nIFwgtISN/GMtWBXyAIF7kQsPYKVHkYRC3eSVFV1dTzB
      pmkWBKDAHYeUEis7jsxOLXle9a1fegRIx0IcPn4GsPHok48uCDsuUOCzgJQmVmoQacSvet2S
      ViBXUZC6iiDZVBrrljSvQIFbhzSzmInua3Z+uMokWNUMNOGmMLUt8FnC0uNY6UGQKwvPuYoA
      OIilJwqhxAU+E0gpkdlJrOzEdZVbxhGmc/jDU3g9joIKVOCOR8q8ff96Oz8sKwA21m1oQZEW
      hTjPAncy0kxhxlem7y/FshpObW0ZacNTsAAVuEORWNkQVmYMbmKmumwsUDwepaOtY5EKlIyF
      udjRzcz0BP1DozdccYECN4qUJmZqECszys10flhmBJgZ7OHQyS5aNzQt2qkymYiTjieIeJzY
      KIRCFLjNWJm8fd+6zi1Xl2K5UIhAfTMPbYsTXmKjNUXVcNhVhGWSzBVCIQrcPqzcDFZ6BEXI
      BSENN4qqqsvPAQxDZykNqbSimtKKQgRogduHlBZWegSph1f93ksKQCoyRSiWhsIUuMCnjDTT
      mKlBWA2VZwmWDYaTloVhmmg22zV3rC8EwxVYdaTEyk1jZca52Ynukhg6avGm5VWgk0cOYSge
      du7eWRgHCtxWpKVjpYeQRmL1b24YkEpipSfB5l1eAGyKyQdHTrJj987Vb0SBAstg6TGs9NCK
      Y3lWjGFgJScwE52YxhhC8ZEJlS0vAE6vn/vWNReC4QrcFqS0sDJjyFxoVe9rZUOYsQ7M1ABC
      caNq9TjcGxBCxV37wHICkEPPCZweT2HVfIFbjjSSmOnhVZvoWnoEM9GFmexDSCeaVofmfgIh
      PjlPNZYTAEF7WxtuXwkmBVtQgVuDlBZWdmLZFVvXg6VHMZPd+U5vaqi2ehyOR5fo9FeiLScA
      NnY+sIneofiiC4xMgu7haSr8rkJWiAI3zGqYNy09ku/0qX6EZUdVa3HY9yDEyoP4l79StTMz
      Mor5iYuGR0bBgEhaQyuEQhS4AWRuOh+6LK8/2F4aUaxUD1Z6ABQ3ilqL3b4XrLyxXsr8yLIi
      lguFSEWmGBmbpmpNw6I5QDAYZGh4FGk5SOqFUIgCK0daOaz0MBgJVEUAK+szlh6bfdP3IVQ3
      qrsZW9HnEVk93+PhhpJ8LhsK4faXsaElzemznYuiQX3+IBv9weuvrcA9S3611tTsgpWVaQoL
      O70T1dOKo/RZRMaAbBbIXfMey2GaJkYuh9OylleBpGVgKWrBClTgppBGAjM9siJd3zISmMlZ
      643qRPW04Kh4HqFbkElDZmXb4C55b8vCNAwMXceyLr/W5fICcKmtja6LA7Tct5mW6rIbrrjA
      Z4fp0DRulxu32w3A+PgYlZVVN3AniTRSWNlppBFd/iorh5WdwspNI/UI0kyiutfgqPgiwhSQ
      y0EkNq/mXAeWZSEtC3O241vL7GGxrAC0rN+A5S5jTaHz3zOEZkKcvnSQqto6XvzF23zxD59j
      cnIKVVPZtHHTiu4hjRRmZhSuyL+54Ly0sNKDGPFLSDOF6mlC9bSgqN58mEImDeHYdbddSjn3
      ljcN44q3/NVZVgDi8Ti5RBIdKGwPfW8QDATx3Xcf0bTBU5/bS1VlFeHuC5Rs2HPNstLK5lOO
      64vf+Hkv7yhmshsrO4niqsMW2I1i84NpQCYL2RlYYaedv6/ENM25Tr9SS6SUklhGoocjS0eD
      hvo6ONLVTUvrbtY1XXvCW4gGvXeRlo6VnUTmZrhygpvv9COznX4KxVmdf9M7KhBS5iey2Uz+
      rb/Sumbf8tblTr/CrbmklGR0iGctwimLjC4pcik0bXt06RFAdblxO90MdLWxpqmQGvFeIBmZ
      4sjHxyhvbOFSZw9/8OXnOPbR+xRXNjHW3U7t+h20NFTOXS/NbL7j6xEud/y5Tp/owspNozhr
      0HwbUYLleT0+l4N4LP/zGkgpkbM+JtM0sSwTy7z2CCGlJK1LEllJMidJZi0sCS6bwOtQqC/R
      cNnzPgOv1720APgr67hPdWFnpUarAp91PH4/QjepblqD1PNvZZumEY0NUVaznXR8GpgVAGlh
      JjryH6XEyo5hJjrz6o2zGq1oM4q9LK/e5HSIRq75pp97s5vm3OdrISVkDEkia5HISBI5C3lF
      Zw96FOpL1Fmfw9IsMwfQOfzBAdylVTzxeOmis/39/RR7C6EQdxPR6WlUnw8RD1O/dgORaBS7
      w4nTW05ysoPa9ffPXSsBM31ZvZlAcVaietdh8+9B6AZkdUiElrXeSCkXdfbl9HcpJYaV7+hZ
      XZIxJBldks5JJODUBB6HIOhVqLdfvbMvxbKxQNXV5RiKE4uF/rp4eIpIPI2qaaiFUIi7Bo+/
      jD2PXLb4WaB5WLd5e/7XxhoAjNm3uMxNoUcuoToasRdtB8OEuI6UM1doDMpsIJqKZYFpWpim
      hWVas3NdFdBASnKmQUbXyRoGWcMko0uyBkhUQMGmSuyqxKlJnDbwuxRcNsHivi5X3A+FomCZ
      V3GElQeLOdU1vei4aUly6Timz0XGkIVQiLscQ0+RjPSSToxT0fgkQghQKxC2LWApiJwCwoXQ
      bCBsCGEDNIRQ0PUcmVQayzTJGQapXJaUniOj62R0HWNWzbGrKi7VjlNz4dc0nA4Vh6qiWDIf
      L2RJhLTAshC6CVkdYRkgdYSlg2XmJ9YWICXCkiCZ/SkRl6cOAoQQCKHkl/k6hpcXgOnoBENt
      QxhfWhgO7Q+W82Cw/BZ93QXuBGLTFxlo/yWJcDea3YfX34QvuG7uvMxkUccUhFTyHl4rDaYF
      lpk3ZVoWlmGAnsNhWmRyOTRp4ReCgBCoioKmqChi9hUuQCoKCAWpCFAUUNTZn5/8p4LNjlBV
      hKqClv+pqBqos+dVBYQExUIKAyl0kDpS6kj0uVFKrW9aXgBcnmo+92TBCXY3I00TMxLBmJhA
      n5hgRnQyNn0QeWGI0kQT5b5WEALIoHh7Ef8+X06oCri8IOY7plQUjNk3fSydZjAyg83rpba0
      DLfThaYoCEWZfQMLEAI5+1kIkReGK35fLT55JyktkDmkzAHK8gIQKPYyKjO4Vq0pBW43Ukqy
      7RfJdnRghkIYoRAyk53t1IAiUP1+YtYQI+pxqh7+BlvX/wccz5WhuFzz130Smx2qa7ByOQxd
      x9B1ookEoUScSDqFTVVpqqnF7yvCZrevaoe+WYRQ+P/bO7fYOK7zjv/OXHb2xl1qLxQp6kJS
      d0WSGyuKayt10hi14QLpU5oWDdC0CPKUAHkrULR97HNfggItisJPLYIiKBqgSJOiMJRWTa04
      dpDEsinJMkVRIrnkXriXuc+cPswuuZR4kVhSJMv5AcNzds7szNnD7z9zLt+cg0hy987HGNoG
      7wTXF+Zomhoe8Rth+42g3aZz/ceY77yDceoUycuX0V76LGqxiJJMRsd4FkuLt7j/wT+iaimu
      fva7JNNP98QPpeR+u0Wz0aDTauK5LslMhnK5zFg2S1JR0faQ0T+BlCA0Ht2/s74AHL/N1K+W
      uHrtM7EA9gnuJ5/Q+uGP8CsLZD7/Kof//M8QiQQQPQ1qs+8y+/EPaNfvoagJ8qXzTLzwx+TL
      6/v5BEFAc2kJyzI5MnoUANsyabeaDBaLHJ84RSqTJqEnUPo7QoIgGvBy3WjU13W25NS2LcgA
      QhcCJwpDh5m7N3HGX11nYiwZ8vN338FRsrx05dKm549dIXYX5/ZtGt/9J7RSkewbr2NMTCyn
      uVaNB5P/TGXqbQYPX+bI6S+RK56NqgJdpJS0mk0qc3PMz81RmZ+jurBAGIaoqkoun6dYKvGb
      r7+x9eqMlOC5YNtgWU81Grzl64TusqETuiDXGYQb/8zaAnj4y58x5dkEdpHPvXJu03cCYgHs
      DjIMaf7L93Fu36Hwja+jFQrLaZ7T5N4v3qI++x7HL/weh8dew3Y8mo0G1cVFFhcqVBcWqNWq
      yDAkl88zdHiYoeFhhg4PUyyXd/Z/GgSR56dlRaLYytNBSpBen8G7EHo8jf+ClCFz6RNrC8Bu
      L3Hnk2lA4/yl85uuExYL4Pnj12rU/uZvSV68iPL5V/now1u0m02sTo2seovao59wvzJCcvBK
      1LsCpNKZ5bt5qTxEsVymUCisrrrsBj3nOMsE04q6U9c6ZovGvhaO2eFDZWjjhbKbC4sY5dIq
      d2iz1eD+zAJD5RytritELIDnizc3T/U73yH71a9yc3qKu7cnOX1qiObsv1HI+0xc/gNKx75I
      wkjuqR6Yp0JKsE1oNcBcAr9XjfG29TJms8H3PphfXwAfvP9TpqZnGT51jiufOtOXv5DpT6aR
      CQ1VSkZHRwmCYP8V9D4lmK/QeOst7r34ad7/6EOuvvwyg/ovqc+/z9ilP6Iwso+mspQhBC4i
      dCHoNlJ9B8K+OrvnIVwHHHdLs0hsePmxKxu8Exx4aNlDDB0aWLV/4eE0HddjQBd0nHhWiOeJ
      c/cuC3/399w8doQckm9881vcefevCDydq2/+9d68CUkZ9cIE7mPbY4beQ7B68QtVhWRyxZ3a
      sbehAR25SKCI9QVQHirx45/e4Auv/caq/UNHx4gdIZ4v7vQDOm+/zcObN/nPkcNce+UVLl6+
      xC+u/wX50nnGL39t9zInZdTLEviRQYdetAV94dPU03tCCf2uS4Xf/bxW3IvaC4EX7ZfhY2E3
      vtF1hQK5zNoCkDJkodpg7PixTdcGiNlepJSYnQ7+fAVx+zbNG//Nhw8fMF0qor1wid//8u8y
      kDV470ffZuTkm4ye+dJOZ4jQqiM7i6jlblU4cOHRz6K7eOCuGK3sGe8G8XWNUnT9f1QQWjeu
      gVCf3K+nwMhGaUKBngs2kT9RtF9dfyS7R2md9QEas/e5N1vHbJlPOXVRDEEgCgAABxZJREFU
      zLMipaS6uMDM9DSV+Tmac/PoMzOkHz5iVNEonTtLcHIC5ytf5sUjR3itUEBRFALf4daNv2Ts
      0h9SOvrra52ZsDmHNKtIewlpN5Ce1a12eMhlY+0ZZ/euGYZRmmci3Q7S7YAXvdguUodQiidR
      S13fIN8Bu941NgVUA7Se8Ymuj1DXCBVtdXynqmm9niTbeqbXLDfsBfIdB2EYm4og7gWKkFLi
      d1/Q9pc3D9dxWWo0qFWr1KuLLFQqOPU6A/UGQ7ZN2XEZGRsjdeECyUsX0cfGEMqToy+uVefn
      //EnHL/wFYYnfmtVWticxZv8V4J71xGZMiI3gkjmEclBhJ4GVUeoOih6n0F2ffZ7Bquo0bGJ
      DCKRRWjJrRms7LoxP1416Rde6PdVbfztbeB6XiQEZ5O5iNYbCHtW/r8KIAxD6rUareYSrWaT
      VrNJu9Wm3W7RabWwbQvJisehEAJV09BULQp1DV3T0XSdjGmSqdbIVGvkPY/koUMkzpzBOHsW
      49RJhB45nMgwIPBtAt/C9zrYnQpmcwaz+YDFmRtcuPanHDr8a9GxdhPvzr/j3/khQk+hnf1t
      tIkvILR9OI+HlCuiCL2++GOfn4WwN6GWvfaME7EAVtNqNpm89QEPpqdZrFQAyWChSD6fJ5vN
      ktUTZAyDTCqFkQRhuHhhG9eq4dp1At8hDD1k4BKGPkG7hV+Zx52Zxrc7yKSKUsyhDBWf9NPt
      IRRULYmqpdD0FAklQUroJJUE2UQeNfCQZpWwMQ2Bh3b6dfQzbyBSg8+zqHYHKVfE0Gtk9ze4
      1xOIlJEvkrW6emQXjh9sAUgpmX04w+StW9y9fZtkMsl4Ks0IMOi4ePMPscw5LHseS2ngph28
      rEQbHiIxOEzKKKFrObQggRYaqIqBohsomoGWzaEVSyjJNELVUFUDVUuhqDqK74DTQvY2qx5t
      Zg1pLhK25sCPuvpEKo/IDqNkhxDZIUS6iEgXUQaGEcn87hbgXkOGXXG4y22eyAmuKxCIqkeW
      Ca7LZMc4OALoOXxVFxaozM8zde9jqguzZI02I2WN4XSI9fH72HYVZXAA9dAgmpHA0AfIZA6T
      yQyTyY6QTBURYYDsFbLvduPRII70HfBtpGd1G6FLUVoPoSKSOYSRA2MAYQwgUoOIVAGRKqBk
      SoiB4f1ZjdnLyLBPEC64FtIY2LoAHLPFkh0yVMg/dwEEQYBtWZimidlp02lHm2ma2LaFbdlR
      aJqEroXmmJj1OYTaQdOWyKba5LM2OdkgHYakA5WkqpFKl0imyyi9LrREBpHIIPQUaMkoVBOg
      JhC9UEtEvSBqIjJazYhCPd1thOZjY97DbFkAU/enkKHkxIkTq1wh+sXQH//eD66z2Oy7E8ro
      jyTqMQhDHykDJEG0T0QzTriuje+5BJ5H4Ln4rk3ouSgiRBUhChIhJAoSRUTx6O06SUh3E+AL
      gZCgS0FK6qS0NCKRhmQOkSoi0gWEnuzL2/5FUTWEokal2yvn7m8KfJ9wvR6XDX63oSt87c1P
      o6oqHcfnV/PWmt+XsNK+Wed8z1q8sj+26gKPIVYOXn0N2XfACkcG1l0iaXNE4NK0nnSF0LSV
      U/bHr105j+muP9mRWM6xIFzpV1kJBY/t22lk90r7byhQURRUXY/er4Vlb1AE+I5NuJa3ZRfR
      b0V9v13XFAwjepINKArnS0Hfd7aC3HLJbv69p5NYykgcnDZATMxaxOtfxBxotuUJ0Ju1V0q5
      3Bboj0M0qKR0RzcfT9voezud9vjn/nxudJ5nOedOpG1HPuPy3GCFmGdBCLFpFUgIsaog9ipx
      PreXvZ7PbXkCxMTsV7blCbAmgcNHk5PYvop0HYaPj/LoUYUBQxBqac6dntj8HM+JB1N3MS2L
      thVQKBRpLT6ieOIMjtlm4sSx3c7eMr18Vusu46eO8uhRhdFSjsW2y8Vzp3c7e8usVZ6DR8d5
      +GCGl6++uNvZW+bB1N0dFABgZIoMKD6aTGGHgvHxMZr12tMvZPycUFWN46OHmWspeK0axWMn
      GS0fYnbW3u2sraKXT9tbwu2Wp2c2Ge9buGIvsFZ5DqZUqsbeGhBUVW3neoHCUOLabbKDRXwt
      zYAaUq3WKA5mKJS3svLgzuF7HkuORhKbo0eHaTeqVCrzNNvWE+sk7ya9fB49klsuz8D3qNUb
      u521VaxVnpYbUC7vrblmfc+L2wAxB5u92zyPiXkOxAKIOdDsaCM45v/O29//B4YvvML1/3qH
      3/niVVK5AvOLdSr3J0kEEn/kFNcund6HHkt7g7gNsMf5nxs/oTI7TXrkOInQQ9ameM/5FC+M
      mowbKjOdkNMvfY7h5G7ndH8SC2CP01xawvN9NF2j06iSyhXoeBp53aa2ZHFoMEdyIE8irsxu
      iVgAMQea+L4Rc6CJBRBzoIkFEHOgiQUQc6D5X5+HpNAtVfj7AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Deaths by Continents' width='192'>
      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
    </thumbnail>
    <thumbnail height='67' name='GLOBAL NUMBERS' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Infected Percent Per Country' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Percent of Infected Population ' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      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
      A7JFsO+xtcx9AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
